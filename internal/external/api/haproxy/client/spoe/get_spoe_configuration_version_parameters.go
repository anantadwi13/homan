// Code generated by go-swagger; DO NOT EDIT.

package spoe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetSpoeConfigurationVersionParams creates a new GetSpoeConfigurationVersionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetSpoeConfigurationVersionParams() *GetSpoeConfigurationVersionParams {
	return &GetSpoeConfigurationVersionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetSpoeConfigurationVersionParamsWithTimeout creates a new GetSpoeConfigurationVersionParams object
// with the ability to set a timeout on a request.
func NewGetSpoeConfigurationVersionParamsWithTimeout(timeout time.Duration) *GetSpoeConfigurationVersionParams {
	return &GetSpoeConfigurationVersionParams{
		timeout: timeout,
	}
}

// NewGetSpoeConfigurationVersionParamsWithContext creates a new GetSpoeConfigurationVersionParams object
// with the ability to set a context for a request.
func NewGetSpoeConfigurationVersionParamsWithContext(ctx context.Context) *GetSpoeConfigurationVersionParams {
	return &GetSpoeConfigurationVersionParams{
		Context: ctx,
	}
}

// NewGetSpoeConfigurationVersionParamsWithHTTPClient creates a new GetSpoeConfigurationVersionParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetSpoeConfigurationVersionParamsWithHTTPClient(client *http.Client) *GetSpoeConfigurationVersionParams {
	return &GetSpoeConfigurationVersionParams{
		HTTPClient: client,
	}
}

/* GetSpoeConfigurationVersionParams contains all the parameters to send to the API endpoint
   for the get spoe configuration version operation.

   Typically these are written to a http.Request.
*/
type GetSpoeConfigurationVersionParams struct {

	/* Spoe.

	   Spoe file name
	*/
	Spoe string

	/* TransactionID.

	   ID of the transaction where we want to add the operation. Cannot be used when version is specified.
	*/
	TransactionID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get spoe configuration version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSpoeConfigurationVersionParams) WithDefaults() *GetSpoeConfigurationVersionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get spoe configuration version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSpoeConfigurationVersionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get spoe configuration version params
func (o *GetSpoeConfigurationVersionParams) WithTimeout(timeout time.Duration) *GetSpoeConfigurationVersionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get spoe configuration version params
func (o *GetSpoeConfigurationVersionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get spoe configuration version params
func (o *GetSpoeConfigurationVersionParams) WithContext(ctx context.Context) *GetSpoeConfigurationVersionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get spoe configuration version params
func (o *GetSpoeConfigurationVersionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get spoe configuration version params
func (o *GetSpoeConfigurationVersionParams) WithHTTPClient(client *http.Client) *GetSpoeConfigurationVersionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get spoe configuration version params
func (o *GetSpoeConfigurationVersionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSpoe adds the spoe to the get spoe configuration version params
func (o *GetSpoeConfigurationVersionParams) WithSpoe(spoe string) *GetSpoeConfigurationVersionParams {
	o.SetSpoe(spoe)
	return o
}

// SetSpoe adds the spoe to the get spoe configuration version params
func (o *GetSpoeConfigurationVersionParams) SetSpoe(spoe string) {
	o.Spoe = spoe
}

// WithTransactionID adds the transactionID to the get spoe configuration version params
func (o *GetSpoeConfigurationVersionParams) WithTransactionID(transactionID *string) *GetSpoeConfigurationVersionParams {
	o.SetTransactionID(transactionID)
	return o
}

// SetTransactionID adds the transactionId to the get spoe configuration version params
func (o *GetSpoeConfigurationVersionParams) SetTransactionID(transactionID *string) {
	o.TransactionID = transactionID
}

// WriteToRequest writes these params to a swagger request
func (o *GetSpoeConfigurationVersionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param spoe
	qrSpoe := o.Spoe
	qSpoe := qrSpoe
	if qSpoe != "" {

		if err := r.SetQueryParam("spoe", qSpoe); err != nil {
			return err
		}
	}

	if o.TransactionID != nil {

		// query param transaction_id
		var qrTransactionID string

		if o.TransactionID != nil {
			qrTransactionID = *o.TransactionID
		}
		qTransactionID := qrTransactionID
		if qTransactionID != "" {

			if err := r.SetQueryParam("transaction_id", qTransactionID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
