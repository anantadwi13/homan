// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package homan

import (
	"embed"
	"github.com/anantadwi13/homan/internal/homan/domain"
	service3 "github.com/anantadwi13/homan/internal/homan/domain/service"
	usecase3 "github.com/anantadwi13/homan/internal/homan/domain/usecase"
	"github.com/anantadwi13/homan/internal/homan/external/service"
	"github.com/anantadwi13/homan/internal/homan/external/usecase"
	"github.com/google/wire"
)

// Injectors from app.go:

func NewApp(config domain.Config) App {
	storage := service3.NewStorage()
	registry := service.NewLocalRegistry(config, storage)
	commander := service.NewCommander()
	executor := service.NewDockerExecutor(config, commander, registry, storage)
	fs := _wireFSValue
	proxy := service.NewDockerProxy(config, executor)
	ucUp := usecase3.NewUcUp(registry, executor, proxy)
	ucInit := usecase.NewUcInit(registry, executor, config, storage, fs, ucUp, proxy)
	ucDown := usecase3.NewUcDown(registry, executor)
	ucAdd := usecase.NewUcAdd(config, registry, executor, proxy)
	ucRemove := usecase.NewUcRemove(config, registry, executor, proxy)
	internalUseCases := useCases{
		Init:   ucInit,
		Up:     ucUp,
		Down:   ucDown,
		Add:    ucAdd,
		Remove: ucRemove,
	}
	app := App{
		UseCases: internalUseCases,
		Config:   config,
	}
	return app
}

var (
	_wireFSValue = Templates
)

// app.go:

var (
	//go:embed template/*
	Templates embed.FS
)

var useCasesSet = wire.NewSet(usecase.NewUcInit, usecase3.NewUcUp, usecase3.NewUcDown, usecase.NewUcAdd, usecase.NewUcRemove, wire.Struct(new(useCases), "Init", "Up", "Down", "Add", "Remove"))

var serviceSet = wire.NewSet(service.NewCommander, service.NewLocalRegistry, service.NewDockerExecutor, service3.NewStorage, service.NewDockerProxy, wire.Struct(new(services), "Commander", "Executor", "Registry", "Storage", "Proxy"))

var applicationSet = wire.NewSet(
	useCasesSet, wire.Value(Templates), wire.Struct(new(App), "UseCases", "Config"),
)

type useCases struct {
	Init   usecase3.UcInit
	Up     usecase3.UcUp
	Down   usecase3.UcDown
	Add    usecase3.UcAdd
	Remove usecase3.UcRemove
}

type services struct {
	Commander service.Commander
	Executor  service3.Executor
	Registry  service3.Registry
	Storage   service3.Storage
	Proxy     service3.Proxy
}

type App struct {
	UseCases useCases
	Config   domain.Config
}
