// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/anantadwi13/cli-whm/internal/external/api/haproxy/models"
)

// CreateStorageSSLCertificateReader is a Reader for the CreateStorageSSLCertificate structure.
type CreateStorageSSLCertificateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateStorageSSLCertificateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateStorageSSLCertificateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateStorageSSLCertificateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateStorageSSLCertificateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateStorageSSLCertificateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateStorageSSLCertificateCreated creates a CreateStorageSSLCertificateCreated with default headers values
func NewCreateStorageSSLCertificateCreated() *CreateStorageSSLCertificateCreated {
	return &CreateStorageSSLCertificateCreated{}
}

/* CreateStorageSSLCertificateCreated describes a response with status code 201, with default header values.

SSL certificate created
*/
type CreateStorageSSLCertificateCreated struct {
	Payload *models.SslCertificate
}

func (o *CreateStorageSSLCertificateCreated) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/storage/ssl_certificates][%d] createStorageSSLCertificateCreated  %+v", 201, o.Payload)
}
func (o *CreateStorageSSLCertificateCreated) GetPayload() *models.SslCertificate {
	return o.Payload
}

func (o *CreateStorageSSLCertificateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SslCertificate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStorageSSLCertificateBadRequest creates a CreateStorageSSLCertificateBadRequest with default headers values
func NewCreateStorageSSLCertificateBadRequest() *CreateStorageSSLCertificateBadRequest {
	return &CreateStorageSSLCertificateBadRequest{}
}

/* CreateStorageSSLCertificateBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateStorageSSLCertificateBadRequest struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

func (o *CreateStorageSSLCertificateBadRequest) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/storage/ssl_certificates][%d] createStorageSSLCertificateBadRequest  %+v", 400, o.Payload)
}
func (o *CreateStorageSSLCertificateBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateStorageSSLCertificateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStorageSSLCertificateConflict creates a CreateStorageSSLCertificateConflict with default headers values
func NewCreateStorageSSLCertificateConflict() *CreateStorageSSLCertificateConflict {
	return &CreateStorageSSLCertificateConflict{}
}

/* CreateStorageSSLCertificateConflict describes a response with status code 409, with default header values.

The specified resource already exists
*/
type CreateStorageSSLCertificateConflict struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

func (o *CreateStorageSSLCertificateConflict) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/storage/ssl_certificates][%d] createStorageSSLCertificateConflict  %+v", 409, o.Payload)
}
func (o *CreateStorageSSLCertificateConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateStorageSSLCertificateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStorageSSLCertificateDefault creates a CreateStorageSSLCertificateDefault with default headers values
func NewCreateStorageSSLCertificateDefault(code int) *CreateStorageSSLCertificateDefault {
	return &CreateStorageSSLCertificateDefault{
		_statusCode: code,
	}
}

/* CreateStorageSSLCertificateDefault describes a response with status code -1, with default header values.

General Error
*/
type CreateStorageSSLCertificateDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// Code gets the status code for the create storage s s l certificate default response
func (o *CreateStorageSSLCertificateDefault) Code() int {
	return o._statusCode
}

func (o *CreateStorageSSLCertificateDefault) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/storage/ssl_certificates][%d] createStorageSSLCertificate default  %+v", o._statusCode, o.Payload)
}
func (o *CreateStorageSSLCertificateDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateStorageSSLCertificateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
